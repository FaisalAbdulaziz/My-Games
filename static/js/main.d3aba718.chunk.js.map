{"version":3,"sources":["component/Cards.js","component/GameDetails.js","component/CardList.js","component/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","useState","isFave","setIsFave","active","setActive","Col","onClick","toggleDrawer","lg","Card","id","style","width","Body","className","prevActive","Title","game","name","Img","variant","src","background_image","e","stopPropagation","prevIsFave","onFaveToggle","filter","color","GameDetails","show","setShow","prevShow","textStyle","verticalAlign","lineHeight","display","ButtonToolbar","faves","games","Drawer","onHide","Header","alt","Rate","defaultValue","rating","allowHalf","readOnly","size","ratings_count","Carousel","undefined","short_screenshots","console","log","Item","interval","image","height","trailer","volume","controls","url","includes","Footer","appearance","CardList","allCards","map","search","fav","Row","length","Button","setFave","Navbar","Nav","fill","Link","handleFilterClick","InputGroup","inside","marginTop","marginBottom","Input","placeholder","onChange","event","handleSearchClick","Icon","icon","require","config","App","gameData","setGameData","setFaves","setFilter","page","setPage","pageS","setPageS","load","setLoad","setSearch","setName","prevFilter","prevFave","useEffect","process","axios","method","then","response","prevGameData","data","results","forEach","element","max","call","prevSearch","concat","prevLoad","handleSearchClickMore","num","call2","cardlist","film","fave","slice","filmIndex","indexOf","push","splice","prevName","Container","preventDefault","prevPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3aba718.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Col } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { MdFavorite } from \"react-icons/md\";\r\nimport { VscChromeClose } from \"react-icons/vsc\";\r\n\r\nconst Cards = (props) => {\r\n\r\n    const [isFave, setIsFave] = useState(() => false)\r\n    const [active, setActive] = useState(() => false)\r\n\r\n    const handleClick = (e) => {\r\n        e.stopPropagation()\r\n        setIsFave((prevIsFave) => prevIsFave = !isFave)\r\n        props.onFaveToggle()\r\n    }\r\n\r\n    const handleActiveClick = () => {\r\n        setActive((prevActive) => prevActive = active)\r\n    }\r\n    return (\r\n        <Col onClick={props.toggleDrawer()} lg={3}>\r\n            <Card id='card' style={{ width: '18rem' }}>\r\n                <Card.Body className='cardBody' onClick={handleActiveClick}>\r\n                    <Card.Title>{props.game.name}</Card.Title>\r\n                    <Card.Img className='imgCard' variant=\"top\" src={props.game.background_image} />\r\n                    <div className='pointer' onClick={handleClick}>\r\n                        {props.filter === 'fav' ? <VscChromeClose /> : (isFave &&\r\n                            (props.filter === 'all' || props.filter === 'fav' || props.filter === 'search')) ?\r\n                            <MdFavorite color='red' />\r\n                            : <MdFavorite />}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React, { useState } from 'react';\r\nimport { Button, Rate, ButtonToolbar, Drawer } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport ReactPlayer from 'react-player'\r\nimport Cards from './Cards.js'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nconst GameDetails = (props) => {\r\n    const [show, setShow] = useState(() => false)\r\n\r\n    const close = () => {\r\n        setShow(prevShow => prevShow = false)\r\n    }\r\n\r\n    const toggleDrawer = () => {\r\n        setShow(prevShow => prevShow = true)\r\n    }\r\n\r\n    const textStyle = {\r\n        verticalAlign: 'top',\r\n        lineHeight: '42px',\r\n        display: 'inline-block'\r\n    };\r\n    return (\r\n        <div>\r\n            <ButtonToolbar>\r\n                <Cards\r\n                    filter={props.filter}\r\n                    game={props.game}\r\n                    key={props.game.id}\r\n                    onFaveToggle={() => props.onFaveToggle(props.game)}\r\n                    faves={props.faves}\r\n                    games={props.games}\r\n                    toggleDrawer={() => toggleDrawer}\r\n                ></Cards>\r\n            </ButtonToolbar>\r\n\r\n            <Drawer\r\n                id='drawer'\r\n                show={show}\r\n                onHide={close}\r\n            >\r\n                <div id='drawer'>\r\n                    <Drawer.Header >\r\n                        <div className='imgAndName'>\r\n                            <img alt=\"\" className='imgCardTop' src={props.game.background_image} />\r\n                        </div>\r\n                        <div className='detailsbtn'>\r\n                            <p>{props.game.name}</p>\r\n                            <div>\r\n                                <Rate defaultValue={props.game.rating} allowHalf readOnly size=\"md\" />\r\n                                <span style={textStyle}>{props.game.rating} / 5 </span>\r\n                                <span className='ratings_count' style={textStyle}>({props.game.ratings_count})</span>\r\n                            </div>\r\n                        </div>\r\n                    </Drawer.Header>\r\n                    <Drawer.Body id='drawerBody'>\r\n                        <Carousel>\r\n                            {props.game.short_screenshots[0] === undefined ? console.log('No img') :\r\n                                <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[0].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[1] === undefined ? console.log('No img') :\r\n                                <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[1].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[2] === undefined ? console.log('No img') :\r\n                                <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[2].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[3] === undefined ? console.log('No img') :\r\n                                <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[3].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[4] === undefined ? console.log('No img') :\r\n                                <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[4].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[5] === undefined ? console.log('No img') :\r\n                                <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[5].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[6] === undefined ? console.log('No img') :\r\n                                <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[6].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </Carousel.Item>\r\n                            }\r\n                        </Carousel>\r\n                        <div>\r\n                            {props.game.trailer === null || props.game.trailer === undefined ? <h1>No video (╯‵□′)╯︵┻━┻</h1> : <ReactPlayer volume={0.1} width={540} controls url={props.game.trailer} />}\r\n                            {/* {props.game.clip.clips['full']===null || props.game.clip.clips['full']=== undefined ? console.log('No Video') : <ReactPlayer volume={0.1} width={535} controls url={props.game.clip.clips['full']} /> } */}\r\n\r\n                        </div>\r\n                    </Drawer.Body>\r\n                    {props.filter === 'fav' || props.faves.includes(props.game) ?\r\n                        <Drawer.Footer>\r\n                            <Button className='notYet' appearance=\"primary\">Add Comment</Button>\r\n                        </Drawer.Footer> : null}\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameDetails;","import React from 'react';\r\nimport { Row, Button } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport GameDetails from './GameDetails'\r\n\r\n\r\n\r\n\r\nconst CardList = (props) => {\r\n\r\n    const allCards = props.games.map((game) => {\r\n        return (\r\n            <GameDetails\r\n                filter={props.filter}\r\n                game={game}\r\n                key={game.id}\r\n                onFaveToggle={() => props.onFaveToggle(game)}\r\n                faves={props.faves}\r\n                games={props.games}\r\n            ></GameDetails>)\r\n    })\r\n\r\n\r\n\r\n    const search = props.search.map((game) => {\r\n        return (\r\n            <GameDetails\r\n                filter={props.filter}\r\n                game={game}\r\n                key={game.id}\r\n                onFaveToggle={() => props.onFaveToggle(game)}\r\n                faves={props.faves}\r\n                games={props.games}\r\n            ></GameDetails>\r\n        )\r\n    })\r\n\r\n    const fav = props.faves.map((game) => {\r\n        return (\r\n            <GameDetails\r\n                filter={props.filter}\r\n                game={game}\r\n                key={game.id}\r\n                onFaveToggle={() => props.onFaveToggle(game)}\r\n                faves={props.faves}\r\n                games={props.games}\r\n            ></GameDetails>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <Row>\r\n                {props.filter === 'all' && search.length === 0 ? allCards\r\n                    : search.length > 0 ? search\r\n                        : props.filter === 'fav' ? fav\r\n                            : null}\r\n            </Row>\r\n            {props.filter === 'fav' && props.faves.length > 0 ? <Button onClick={props.setFave()} variant=\"outline-danger\">Remove all</Button> : \"\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport { Nav } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { InputGroup, Input, Icon } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\n\r\nconst Navbar = (props) => {\r\n    const styles = {\r\n        width: 300,\r\n        marginTop: 10,\r\n        marginBottom: 5\r\n    };\r\n    return (\r\n        <Nav id='fixed-top' fill>\r\n            <Nav.Item id='navtabs'>\r\n                <Nav.Link onClick={() => props.handleFilterClick('all')} >All games</Nav.Link>\r\n            </Nav.Item>\r\n            <InputGroup inside style={styles}>\r\n                <Input placeholder=\"Game name\" onChange={(event) => props.handleSearchClick(event)} />\r\n                <InputGroup.Button>\r\n                    <Icon icon=\"search\" />\r\n                </InputGroup.Button>\r\n            </InputGroup>\r\n            <Nav.Item id='navtabs'>\r\n                <Nav.Link onClick={() => props.handleFilterClick('fav')}>Fav games</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n}\r\nexport default Navbar;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Container, Button } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport CardList from './component/CardList';\r\nimport axios from \"axios\"\r\nimport Navbar from \"./component/Navbar.js\"\r\nrequire('dotenv').config()\r\n\r\n\r\nconst App = () => {\r\n\r\n    const [gameData, setGameData] = useState(() => [])\r\n    const [faves, setFaves] = useState(() => [])\r\n    const [filter, setFilter] = useState(() => 'all')\r\n    const [page, setPage] = useState(() => 1)\r\n    const [pageS, setPageS] = useState(() => 1)\r\n    const [load, setLoad] = useState(() => 'More Games')\r\n    const [search, setSearch] = useState(() => [])\r\n    const [name, setName] = useState(() => \"\")\r\n\r\n    const handleFilterClick = (filter) => {\r\n        setFilter(prevFilter => prevFilter = filter)\r\n    }\r\n\r\n    const handleSearchClick = (name) => {\r\n        const url = `https://api.rawg.io/api/games?key=${process.env.REACT_APP_API_KEY}&search=${name}`\r\n        axios({\r\n            method: 'GET',\r\n            url: url\r\n        }).then(response => {\r\n            setSearch(prevSearch => prevSearch = (response.data.results))\r\n            setName(prevName => prevName = name)\r\n            response.data.results.forEach(element => {\r\n                axios({\r\n                    method: 'GET',\r\n                    url: `https://api.rawg.io/api/games/${element.id}/movies?key=${process.env.REACT_APP_API_KEY}`\r\n                }).then(response => {\r\n                    response.data.results[0] == undefined? console.log(\"no clip\") : element.trailer = response.data.results[0].data.max\r\n                })\r\n            });\r\n        })\r\n        handleFilterClick('search')\r\n    }\r\n    const handleSearchClickMore = () => {\r\n        const url = `https://api.rawg.io/api/games?key=${process.env.REACT_APP_API_KEY}&page=${pageS}&search=${name}`\r\n        axios({\r\n            method: 'GET',\r\n            url: url\r\n        }).then(response => {\r\n            setSearch(prevSearch => prevSearch.concat(response.data.results))\r\n            setLoad(prevLoad => prevLoad = 'More Games')\r\n            response.data.results.forEach(element => {\r\n                axios({\r\n                    method: 'GET',\r\n                    url: `https://api.rawg.io/api/games/${element.id}/movies?key=${process.env.REACT_APP_API_KEY}`\r\n                }).then(response => {\r\n                    response.data.results[0] == undefined? console.log(\"no clip\") : element.trailer = response.data.results[0].data.max\r\n                })\r\n            });\r\n        })\r\n        handleFilterClick('search')\r\n\r\n    }\r\n    const call = () => {\r\n        // const url = `https://api.rawg.io/api/games?page=1`\r\n        const url = `https://api.rawg.io/api/games?key=${process.env.REACT_APP_API_KEY}&page=1`\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: url\r\n        }).then(response => {\r\n            setGameData(prevGameData => prevGameData = response.data.results)\r\n            response.data.results.forEach(element => {\r\n                axios({\r\n                    method: 'GET',\r\n                    url: `https://api.rawg.io/api/games/${element.id}/movies?key=${process.env.REACT_APP_API_KEY}`\r\n                }).then(response => {\r\n                    response.data.results[0] == undefined? console.log(\"no clip\") : element.trailer = response.data.results[0].data.max\r\n                })\r\n            });\r\n        })\r\n    }\r\n    \r\n    const call2 = (num) => {\r\n        const url = `https://api.rawg.io/api/games?key=${process.env.REACT_APP_API_KEY}&page=${num}`\r\n        \r\n        axios({\r\n            method: 'GET',\r\n            url: url\r\n        }).then(response => {\r\n            setGameData(prevGameData => prevGameData.concat(response.data.results))\r\n            setLoad(prevLoad => prevLoad = 'More Games')\r\n            response.data.results.forEach(element => {\r\n                axios({\r\n                    method: 'GET',\r\n                    url: `https://api.rawg.io/api/games/${element.id}/movies?key=${process.env.REACT_APP_API_KEY}`\r\n                }).then(response => {\r\n                    response.data.results[0] == undefined? console.log(\"no clip\") : element.trailer = response.data.results[0].data.max\r\n                })\r\n            });\r\n        })\r\n        \r\n        \r\n    }\r\n    \r\n    const handleFaveToggle = (film) => {\r\n        const fave = faves.slice(0)\r\n        const filmIndex = fave.indexOf(film)\r\n        filmIndex === -1 ? fave.push(film) : fave.splice(filmIndex, 1)\r\n        setFaves(prevFave => prevFave = fave)\r\n    }\r\n    \r\n    const setFave = () => {\r\n        setFaves(prevFave => prevFave = [])\r\n    }\r\n\r\n    useEffect(() => {\r\n        call()\r\n    }, [])\r\n    useEffect(() => {\r\n        if (pageS > 1 && filter === 'search') {\r\n            handleSearchClickMore()\r\n        } else if (page > 1 && filter === 'all') {\r\n            call2(page)\r\n        }\r\n    }, [page, pageS])\r\n\r\n    const loading = (e) => {\r\n        e.preventDefault();\r\n        setLoad(prevLoad => prevLoad = 'Loading...')\r\n        if (filter === 'all') {\r\n            setPage(prevPage => prevPage + 1)\r\n        } else if (filter === 'search') {\r\n            setPageS(prevPage => prevPage + 1)\r\n        }\r\n        \r\n    }\r\n    const cardlist1 = ((filter === 'all' || filter === 'fav') && search.length > 0 ? setSearch(prevSearch => prevSearch = []) : null)\r\n    const cardlist = (gameData ? <div>\r\n        <CardList className='card-container' setFave={() => setFave} filter={filter} search={search} games={gameData} faves={faves} onFaveToggle={handleFaveToggle}></CardList>\r\n    </div> : null)\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar search={search} handleSearchClick={handleSearchClick} handleFilterClick={handleFilterClick}></Navbar>\r\n            <header className=\"App-header\">\r\n                {filter === 'all' || filter === 'search' ? <h1 className='h1Header'>My Games</h1> : <h1 className='h1Header'>Favourite Games</h1>}\r\n                <Container>\r\n\r\n                    {cardlist}\r\n\r\n                </Container>\r\n                {filter === 'all' || filter === 'search' ? <Button id='moreBtn' variant=\"light\" onClick={loading}>{load}</Button> : null}\r\n\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}