{"version":3,"sources":["component/Cards.js","component/GameDetails.js","component/CardList.js","component/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","useState","isFave","setIsFave","active","setActive","Col","onClick","toggleDrawer","lg","Card","id","style","width","Body","className","prevActive","Title","game","name","Img","variant","src","background_image","e","stopPropagation","prevIsFave","onFaveToggle","filter","color","GameDetails","show","setShow","prevShow","textStyle","verticalAlign","lineHeight","display","ButtonToolbar","faves","games","Drawer","onHide","Header","alt","Rate","defaultValue","rating","allowHalf","readOnly","size","ratings_count","Carousel","undefined","short_screenshots","console","log","Item","interval","image","height","clip","volume","controls","url","clips","CardList","allCards","map","search","fav","Row","length","Button","setFave","Navbar","Nav","fill","Link","handleFilterClick","InputGroup","inside","marginTop","marginBottom","Input","placeholder","onChange","event","handleSearchClick","Icon","icon","App","gameData","setGameData","setFaves","setFilter","page","setPage","pageS","setPageS","load","setLoad","setSearch","setName","prevFilter","prevFave","useEffect","axios","method","then","response","prevGameData","data","results","prevSearch","concat","prevLoad","handleSearchClickMore","num","call2","cardlist","film","fave","slice","filmIndex","indexOf","push","splice","prevName","Container","preventDefault","prevPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wVA0CeA,EApCD,SAACC,GAAW,IAAD,EAEOC,oBAAS,kBAAM,KAFtB,mBAEdC,EAFc,KAENC,EAFM,OAGOF,oBAAS,kBAAM,KAHtB,mBAGdG,EAHc,KAGNC,EAHM,KAcrB,OACI,cAACC,EAAA,EAAD,CAAKC,QAASP,EAAMQ,eAAgBC,GAAI,EAAxC,SACI,cAACC,EAAA,EAAD,CAAMC,GAAG,OAAOC,MAAO,CAAEC,MAAO,SAAhC,SACI,eAACH,EAAA,EAAKI,KAAN,CAAWC,UAAU,WAAWR,QANlB,WACtBF,GAAU,SAACW,GAAD,OAA6BZ,MAK/B,UACI,cAACM,EAAA,EAAKO,MAAN,UAAajB,EAAMkB,KAAKC,OACxB,cAACT,EAAA,EAAKU,IAAN,CAAUL,UAAU,UAAUM,QAAQ,MAAMC,IAAKtB,EAAMkB,KAAKK,mBAC5D,qBAAKR,UAAU,UAAUR,QAfrB,SAACiB,GACjBA,EAAEC,kBACFtB,GAAU,SAACuB,GAAD,OAA8BxB,KACxCF,EAAM2B,gBAYM,SACsB,QAAjB3B,EAAM4B,OAAkB,cAAC,IAAD,KAAqB1B,GACxB,QAAjBF,EAAM4B,QAAqC,QAAjB5B,EAAM4B,QAAqC,WAAjB5B,EAAM4B,OAEzD,cAAC,IAAD,IADF,cAAC,IAAD,CAAYC,MAAM,kB,SC6K/BC,EAnMK,SAAC9B,GAAW,IAAD,EACHC,oBAAS,kBAAM,KADZ,mBACpB8B,EADoB,KACdC,EADc,KAOrBxB,EAAe,WACjBwB,GAAQ,SAAAC,GAAQ,OAAe,MAG7BC,EAAY,CACdC,cAAe,MACfC,WAAY,OACZC,QAAS,gBAEb,OACI,gCACI,cAACC,EAAA,EAAD,UACI,cAAC,EAAD,CACIV,OAAQ5B,EAAM4B,OACdV,KAAMlB,EAAMkB,KAEZS,aAAc,kBAAM3B,EAAM2B,aAAa3B,EAAMkB,OAC7CqB,MAAOvC,EAAMuC,MACbC,MAAOxC,EAAMwC,MACbhC,aAAc,kBAAMA,IAJfR,EAAMkB,KAAKP,MASxB,cAAC8B,EAAA,EAAD,CACI9B,GAAG,SACHoB,KAAMA,EACNW,OA/BE,WACVV,GAAQ,SAAAC,GAAQ,OAAe,MA2B3B,SAKI,sBAAKtB,GAAG,SAAR,UACI,eAAC8B,EAAA,EAAOE,OAAR,WACI,qBAAK5B,UAAU,aAAf,SACI,qBAAK6B,IAAI,GAAG7B,UAAU,aAAaO,IAAKtB,EAAMkB,KAAKK,qBAEvD,sBAAKR,UAAU,aAAf,UACI,4BAAIf,EAAMkB,KAAKC,OACf,gCACI,cAAC0B,EAAA,EAAD,CAAMC,aAAc9C,EAAMkB,KAAK6B,OAAQC,WAAS,EAACC,UAAQ,EAACC,KAAK,OAC/D,uBAAMtC,MAAOsB,EAAb,UAAyBlC,EAAMkB,KAAK6B,OAApC,WACA,uBAAMhC,UAAU,gBAAgBH,MAAOsB,EAAvC,cAAoDlC,EAAMkB,KAAKiC,cAA/D,gBAIZ,eAACV,EAAA,EAAO3B,KAAR,CAAaH,GAAG,aAAhB,UASI,eAACyC,EAAA,EAAD,gBACyCC,IAApCrD,EAAMkB,KAAKoC,kBAAkB,GAAmBC,QAAQC,IAAI,UAC7D,cAACJ,EAAA,EAASK,KAAV,CAAe9C,GAAG,WAAW+C,SAAU,IAAvC,SACQ,qBAAK/C,GAAG,WACJW,IAAKtB,EAAMkB,KAAKoC,kBAAkB,GAAGK,MACrCC,OAAO,MACPhB,IAAI,YAIqBS,IAApCrD,EAAMkB,KAAKoC,kBAAkB,GAAmBC,QAAQC,IAAI,UAC7D,cAACJ,EAAA,EAASK,KAAV,CAAe9C,GAAG,WAAW+C,SAAU,IAAvC,SACQ,qBAAK/C,GAAG,WACJW,IAAKtB,EAAMkB,KAAKoC,kBAAkB,GAAGK,MACrCC,OAAO,MACPhB,IAAI,YAIqBS,IAApCrD,EAAMkB,KAAKoC,kBAAkB,GAAmBC,QAAQC,IAAI,UAC7D,cAACJ,EAAA,EAASK,KAAV,CAAe9C,GAAG,WAAW+C,SAAU,IAAvC,SACQ,qBAAK/C,GAAG,WACJW,IAAKtB,EAAMkB,KAAKoC,kBAAkB,GAAGK,MACrCC,OAAO,MACPhB,IAAI,YAIqBS,IAApCrD,EAAMkB,KAAKoC,kBAAkB,GAAmBC,QAAQC,IAAI,UAC7D,cAACJ,EAAA,EAASK,KAAV,CAAe9C,GAAG,WAAW+C,SAAU,IAAvC,SACQ,qBAAK/C,GAAG,WACJW,IAAKtB,EAAMkB,KAAKoC,kBAAkB,GAAGK,MACrCC,OAAO,MACPhB,IAAI,YAIqBS,IAApCrD,EAAMkB,KAAKoC,kBAAkB,GAAmBC,QAAQC,IAAI,UAC7D,cAACJ,EAAA,EAASK,KAAV,CAAe9C,GAAG,WAAW+C,SAAU,IAAvC,SACQ,qBAAK/C,GAAG,WACJW,IAAKtB,EAAMkB,KAAKoC,kBAAkB,GAAGK,MACrCC,OAAO,MACPhB,IAAI,YAIqBS,IAApCrD,EAAMkB,KAAKoC,kBAAkB,GAAmBC,QAAQC,IAAI,UACzD,cAACJ,EAAA,EAASK,KAAV,CAAe9C,GAAG,WAAW+C,SAAU,IAAvC,SACI,qBAAK/C,GAAG,WACJW,IAAKtB,EAAMkB,KAAKoC,kBAAkB,GAAGK,MACrCC,OAAO,MACPhB,IAAI,YAIqBS,IAApCrD,EAAMkB,KAAKoC,kBAAkB,GAAmBC,QAAQC,IAAI,UACzD,cAACJ,EAAA,EAASK,KAAV,CAAe9C,GAAG,WAAW+C,SAAU,IAAvC,SACI,qBAAK/C,GAAG,WACJW,IAAKtB,EAAMkB,KAAKoC,kBAAkB,GAAGK,MACrCC,OAAO,MACPhB,IAAI,UA4DpB,8BACyB,OAApB5C,EAAMkB,KAAK2C,WAAqCR,IAApBrD,EAAMkB,KAAK2C,KAAqBN,QAAQC,IAAI,YAAc,cAAC,IAAD,CAAaM,OAAQ,GAAKjD,MAAO,IAAKkD,UAAQ,EAACC,IAAKhE,EAAMkB,KAAK2C,KAAKI,MAAhB,qBCrHxJC,EA9DE,SAAClE,GAEd,IAAMmE,EAAWnE,EAAMwC,MAAM4B,KAAI,SAAClD,GAC9B,OACI,cAAC,EAAD,CACIU,OAAQ5B,EAAM4B,OACdV,KAAMA,EAENS,aAAc,kBAAM3B,EAAM2B,aAAaT,IACvCqB,MAAOvC,EAAMuC,MACbC,MAAOxC,EAAMwC,OAHRtB,EAAKP,OAUhB0D,EAASrE,EAAMqE,OAAOD,KAAI,SAAClD,GAC7B,OACI,cAAC,EAAD,CACIU,OAAQ5B,EAAM4B,OACdV,KAAMA,EAENS,aAAc,kBAAM3B,EAAM2B,aAAaT,IACvCqB,MAAOvC,EAAMuC,MACbC,MAAOxC,EAAMwC,OAHRtB,EAAKP,OAShB2D,EAAMtE,EAAMuC,MAAM6B,KAAI,SAAClD,GACzB,OACI,cAAC,EAAD,CACIU,OAAQ5B,EAAM4B,OACdV,KAAMA,EAENS,aAAc,kBAAM3B,EAAM2B,aAAaT,IACvCqB,MAAOvC,EAAMuC,MACbC,MAAOxC,EAAMwC,OAHRtB,EAAKP,OAQtB,OACI,gCACI,cAAC4D,EAAA,EAAD,UACsB,QAAjBvE,EAAM4B,QAAsC,IAAlByC,EAAOG,OAAeL,EAC3CE,EAAOG,OAAS,EAAIH,EACC,QAAjBrE,EAAM4B,OAAmB0C,EACrB,OAOA,QAAjBtE,EAAM4B,QAAoB5B,EAAMuC,MAAMiC,OAAS,EAAI,cAACC,EAAA,EAAD,CAAQlE,QAASP,EAAM0E,UAAWrD,QAAQ,iBAA1C,wBAAiF,O,qDCjClIsD,EA1BA,SAAC3E,GAMZ,OACI,eAAC4E,EAAA,EAAD,CAAKjE,GAAG,YAAYkE,MAAI,EAAxB,UACI,cAACD,EAAA,EAAInB,KAAL,CAAU9C,GAAG,UAAb,SACI,cAACiE,EAAA,EAAIE,KAAL,CAAUvE,QAAS,kBAAMP,EAAM+E,kBAAkB,QAAjD,yBAKJ,eAACC,EAAA,EAAD,CAAYC,QAAM,EAACrE,MAbZ,CACXC,MAAO,IACPqE,UAAW,GACXC,aAAc,GAUV,UACI,cAACC,EAAA,EAAD,CAAOC,YAAY,YAAYC,SAAU,SAACC,GAAD,OAAWvF,EAAMwF,kBAAkBD,MAC5E,cAACP,EAAA,EAAWP,OAAZ,UACI,cAACgB,EAAA,EAAD,CAAMC,KAAK,gBAGnB,cAACd,EAAA,EAAInB,KAAL,CAAU9C,GAAG,UAAb,SACI,cAACiE,EAAA,EAAIE,KAAL,CAAUvE,QAAS,kBAAMP,EAAM+E,kBAAkB,QAAjD,6BC6GDY,EA5HH,WAAO,IAAD,EAEkB1F,oBAAS,iBAAM,MAFjC,mBAEP2F,EAFO,KAEGC,EAFH,OAGY5F,oBAAS,iBAAM,MAH3B,mBAGPsC,EAHO,KAGAuD,EAHA,OAIc7F,oBAAS,iBAAM,SAJ7B,mBAIP2B,EAJO,KAICmE,EAJD,OAKU9F,oBAAS,kBAAM,KALzB,mBAKP+F,EALO,KAKDC,EALC,OAMYhG,oBAAS,kBAAM,KAN3B,mBAMPiG,EANO,KAMAC,EANA,OAOUlG,oBAAS,iBAAM,gBAPzB,mBAOPmG,EAPO,KAODC,EAPC,OAQcpG,oBAAS,iBAAM,MAR7B,mBAQPoE,EARO,KAQCiC,EARD,OASUrG,oBAAS,iBAAM,MATzB,mBASPkB,EATO,KASDoF,EATC,KAWRxB,EAAoB,SAACnD,GACvBmE,GAAU,SAAAS,GAAU,OAAiB5E,MA4DnC8C,EAAU,WACZoB,GAAS,SAAAW,GAAQ,MAAe,OAGpCC,qBAAU,WAjCNC,IAAM,CACFC,OAAQ,MACR5C,IAJK,yCAKN6C,MAAK,SAAAC,GACJjB,GAAY,SAAAkB,GAAY,OAAmBD,EAASE,KAAKC,gBAgC9D,IACHP,qBAAU,WAGHR,EAAQ,GAAgB,WAAXtE,EAxDU,WAE1B,IAAMoC,EAAG,6CAAyCkC,EAAzC,mBAAyD/E,GAClEwF,IAAM,CACFC,OAAQ,MACR5C,IAAKA,IACN6C,MAAK,SAAAC,GACJR,GAAU,SAAAY,GAAU,OAAIA,EAAWC,OAAOL,EAASE,KAAKC,YACxDZ,GAAQ,SAAAe,GAAQ,MAAe,mBAEnCrC,EAAkB,UA+CdsC,GACKrB,EAAO,GAAgB,QAAXpE,GAlCX,SAAC0F,GACX,IAAMtD,EAAG,6CAAyCsD,GAElDX,IAAM,CACFC,OAAQ,MACR5C,IAAKA,IACN6C,MAAK,SAAAC,GACJjB,GAAY,SAAAkB,GAAY,OAAIA,EAAaI,OAAOL,EAASE,KAAKC,YAC9DZ,GAAQ,SAAAe,GAAQ,MAAe,mBA2B/BG,CAAMvB,KAEX,CAACA,EAAKE,KAYsB,QAAXtE,GAA+B,QAAXA,IAAqByC,EAAOG,OAAS,GAAI8B,GAAU,SAAAY,GAAU,MAAiB,MAVtH,IAWMM,EAAY5B,EAAW,8BACzB,cAAC,EAAD,CAAU7E,UAAU,iBAAiB2D,QAAS,kBAAMA,GAAS9C,OAAQA,EAAQyC,OAAQA,EAAQ7B,MAAOoD,EAAUrD,MAAOA,EAAOZ,aArCvG,SAAC8F,GACtB,IAAMC,EAAOnF,EAAMoF,MAAM,GACnBC,EAAYF,EAAKG,QAAQJ,IAChB,IAAfG,EAAmBF,EAAKI,KAAKL,GAAQC,EAAKK,OAAOH,EAAW,GAC5D9B,GAAS,SAAAW,GAAQ,OAAeiB,UAkC3B,KAET,OACI,sBAAK3G,UAAU,MAAf,UACI,cAAC,EAAD,CAAQsD,OAAQA,EAAQmB,kBA5FN,SAACrE,GAEvB,IAAM6C,EAAG,+CAA2C7C,GACpDwF,IAAM,CACFC,OAAQ,MACR5C,IAAKA,IACN6C,MAAK,SAAAC,GACJR,GAAU,SAAAY,GAAU,OAAkBJ,EAASE,KAAKC,WACpDV,GAAQ,SAAAyB,GAAQ,OAAe7G,QAEnC4D,EAAkB,WAkFgDA,kBAAmBA,IACjF,yBAAQhE,UAAU,aAAlB,UACgB,QAAXa,GAA+B,WAAXA,EAAsB,oBAAIb,UAAU,WAAd,sBAAyC,oBAAIA,UAAU,WAAd,6BAEpF,cAACkH,EAAA,EAAD,UAEKT,IAIO,QAAX5F,GAA+B,WAAXA,EAAsB,cAAC6C,EAAA,EAAD,CAAQ9D,GAAG,UAAUU,QAAQ,QAAQd,QA3B5E,SAACiB,GACbA,EAAE0G,iBACF7B,GAAQ,SAAAe,GAAQ,MAAe,gBACnB,QAATxF,EACCqE,GAAQ,SAAAkC,GAAQ,OAAIA,EAAW,KACjB,WAATvG,GACLuE,GAAS,SAAAgC,GAAQ,OAAIA,EAAW,MAqBe,SAAwD/B,IAAiB,YCrHrHgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.19d4fff6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Col } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { MdFavorite } from \"react-icons/md\";\r\nimport { VscChromeClose } from \"react-icons/vsc\";\r\n\r\nconst Cards = (props) => {\r\n\r\n    const [isFave, setIsFave] = useState(() => false)\r\n    const [active, setActive] = useState(() => false)\r\n\r\n    const handleClick = (e) => {\r\n        e.stopPropagation()\r\n        setIsFave((prevIsFave) => prevIsFave = !isFave)\r\n        props.onFaveToggle()\r\n    }\r\n\r\n    const handleActiveClick = () => {\r\n        setActive((prevActive) => prevActive = active)\r\n    }\r\n    return (\r\n        <Col onClick={props.toggleDrawer()} lg={3}>\r\n            <Card id='card' style={{ width: '18rem' }}>\r\n                <Card.Body className='cardBody' onClick={handleActiveClick}>\r\n                    <Card.Title>{props.game.name}</Card.Title>\r\n                    <Card.Img className='imgCard' variant=\"top\" src={props.game.background_image} />\r\n                    <div className='pointer' onClick={handleClick}>\r\n                        {props.filter === 'fav'? <VscChromeClose/> : (isFave &&\r\n                            (props.filter === 'all' || props.filter === 'fav' || props.filter === 'search')) ?\r\n                            <MdFavorite color='red' />\r\n                            : <MdFavorite />}\r\n                        {/* {(isFave &&\r\n                            (props.filter === 'all' || props.filter === 'fav' || props.filter === 'search')) ?\r\n                            <MdFavorite color='red' />\r\n                            : <MdFavorite />} */}\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default Cards;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// //import React from 'react';\r\n// import React, { Component } from 'react';\r\n// import {Card, Col} from 'react-bootstrap'\r\n// import 'bootstrap/dist/css/bootstrap.css'\r\n// import { MdFavorite } from \"react-icons/md\";\r\n// // import GameDetails from './GameDetails';\r\n\r\n// class Cards extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             isFave: false,\r\n//             active: false,\r\n//         };\r\n//         this.handleClick = this.handleClick.bind(this)\r\n//     }\r\n//     // componentDidMount = () => {\r\n//     //     this.props.handleCards\r\n//     // }\r\n\r\n//     handleClick(e) {\r\n//         e.stopPropagation()\r\n//         console.log('Handling Fave click!')\r\n//         this.setState({\r\n//             isFave: !this.state.isFave\r\n//         })\r\n\r\n//         this.props.onFaveToggle()\r\n//     }\r\n\r\n\r\n//     handleActiveClick = () => {\r\n//         this.setState({ active: !this.state.active })\r\n//     }\r\n\r\n\r\n//     render() {\r\n\r\n\r\n//         // { console.log('141414414141', this.props.game) }\r\n//         return (\r\n//             <Col onClick={this.props.toggleDrawer()} lg={3}>\r\n//                 <Card className='card' style={{ width: '18rem' }}>\r\n//                         <Card.Body className='cardBody' onClick={this.handleActiveClick}>\r\n//                             <Card.Title>{this.props.game.name}</Card.Title>\r\n//                             <Card.Img className='imgCard' variant=\"top\" src={this.props.game.background_image} />\r\n\r\n//                             {/* <button className='btnCard'><MdFavorite color='white'/></button> */}\r\n//                             {/* <div><MdFavorite color='white'/></div> */}\r\n//                             <div className='pointer' onClick={this.handleClick}>{(this.state.isFave) ? <MdFavorite color='red' /> : <MdFavorite />}</div>\r\n//                             {/* <Button className='btnCard' variant=\"primary\">Go somewhere</Button> */}\r\n//                         </Card.Body>\r\n//                         {/* <GameDetails active={this.state.active} game={this.props.game} ></GameDetails> */}\r\n//                     </Card>\r\n//                     </Col>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Cards;","import React, { useState } from 'react';\r\nimport { Button, Rate, ButtonToolbar, Drawer } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport ReactPlayer from 'react-player'\r\nimport Cards from './Cards.js'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nconst GameDetails = (props) => {\r\n    const [show, setShow] = useState(() => false)\r\n\r\n    const close = () => {\r\n        setShow(prevShow => prevShow = false)\r\n    }\r\n\r\n    const toggleDrawer = () => {\r\n        setShow(prevShow => prevShow = true)\r\n    }\r\n\r\n    const textStyle = {\r\n        verticalAlign: 'top',\r\n        lineHeight: '42px',\r\n        display: 'inline-block'\r\n    };\r\n    return (\r\n        <div>\r\n            <ButtonToolbar>\r\n                <Cards\r\n                    filter={props.filter}\r\n                    game={props.game}\r\n                    key={props.game.id}\r\n                    onFaveToggle={() => props.onFaveToggle(props.game)}\r\n                    faves={props.faves}\r\n                    games={props.games}\r\n                    toggleDrawer={() => toggleDrawer}\r\n                // isFave={props.games.includes(props.game)}\r\n                ></Cards>\r\n            </ButtonToolbar>\r\n\r\n            <Drawer\r\n                id='drawer'\r\n                show={show}\r\n                onHide={close}\r\n            >\r\n                <div id='drawer'>\r\n                    <Drawer.Header >\r\n                        <div className='imgAndName'>\r\n                            <img alt=\"\" className='imgCardTop' src={props.game.background_image} />\r\n                        </div>\r\n                        <div className='detailsbtn'>\r\n                            <p>{props.game.name}</p>\r\n                            <div>\r\n                                <Rate defaultValue={props.game.rating} allowHalf readOnly size=\"md\" />\r\n                                <span style={textStyle}>{props.game.rating} / 5 </span>\r\n                                <span className='ratings_count' style={textStyle}>({props.game.ratings_count})</span>\r\n                            </div>\r\n                        </div>\r\n                    </Drawer.Header>\r\n                    <Drawer.Body id='drawerBody'>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <Carousel >\r\n                            {props.game.short_screenshots[0] === undefined ? console.log('No img') :\r\n                            <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[0].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                            </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[1] === undefined ? console.log('No img') :\r\n                            <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[1].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                            </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[2] === undefined ? console.log('No img') :\r\n                            <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[2].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                            </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[3] === undefined ? console.log('No img') :\r\n                            <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[3].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                            </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[4] === undefined ? console.log('No img') :\r\n                            <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[4].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                            </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[5] === undefined ? console.log('No img') :\r\n                                <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[5].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </Carousel.Item>\r\n                            }\r\n                            {props.game.short_screenshots[6] === undefined ? console.log('No img') :\r\n                                <Carousel.Item id='slideImg' interval={1000}>\r\n                                    <img id='slideImg'\r\n                                        src={props.game.short_screenshots[6].image}\r\n                                        height=\"250\"\r\n                                        alt=\"\"\r\n                                    />\r\n                                </Carousel.Item>\r\n                            }\r\n                        </Carousel>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        {/* {1 === undefined?console.log('undefined'):console.log(props.game.short_screenshots[0].image)} */}\r\n                        {/* <Carousel shape={'bar'} autoplay className=\"custom-slider\">\r\n                            {props.game.short_screenshots[0] === undefined ? console.log('No img') : <img\r\n                                src={props.game.short_screenshots[0].image}\r\n                                height=\"250\"\r\n                                alt=\"\"\r\n                            />}\r\n\r\n                            {props.game.short_screenshots[1] === undefined ? console.log('No img') : <img\r\n                                src={props.game.short_screenshots[1].image}\r\n                                height=\"250\"\r\n                                alt=\"\"\r\n                            />}\r\n                            {props.game.short_screenshots[2] === undefined ? console.log('No img') : <img\r\n                                src={props.game.short_screenshots[2].image}\r\n                                height=\"250\"\r\n                                alt=\"\"\r\n                            />}\r\n                            {props.game.short_screenshots[3] === undefined ? console.log('No img') : <img\r\n                                src={props.game.short_screenshots[3].image}\r\n                                height=\"250\"\r\n                                alt=\"\"\r\n                            />}\r\n                            {props.game.short_screenshots[4] === undefined ? console.log('No img') : <img\r\n                                src={props.game.short_screenshots[4].image}\r\n                                height=\"250\"\r\n                                alt=\"\"\r\n                            />}\r\n                            {props.game.short_screenshots[5] === undefined ? console.log('No img') : <img\r\n                                src={props.game.short_screenshots[5].image}\r\n                                height=\"250\"\r\n                                alt=\"\"\r\n                            />}\r\n                            {props.game.short_screenshots[6] === undefined ? console.log('No img') : <img\r\n                                src={props.game.short_screenshots[6].image}\r\n                                height=\"250\"\r\n                                alt=\"\"\r\n                            />}\r\n                        </Carousel> */}\r\n                        <div>\r\n                            {props.game.clip === null || props.game.clip === undefined ? console.log('No Video') : <ReactPlayer volume={0.1} width={540} controls url={props.game.clip.clips['full']} />}\r\n                            {/* {props.game.clip.clips['full']===null || props.game.clip.clips['full']=== undefined ? console.log('No Video') : <ReactPlayer volume={0.1} width={535} controls url={props.game.clip.clips['full']} /> } */}\r\n\r\n                        </div>\r\n                    </Drawer.Body></div>\r\n                {/* <Drawer.Footer> */}\r\n                {/* <Button onClick={close} appearance=\"primary\">Confirm</Button>\r\n                    <Button onClick={close} appearance=\"subtle\">Cancel</Button> */}\r\n                {/* </Drawer.Footer> */}\r\n            </Drawer>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameDetails;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react';\r\n// // import ReactDOM from 'react-dom';\r\n// import { Button, Progress, Rate, ButtonToolbar, Drawer, Carousel } from 'rsuite';\r\n// import 'rsuite/dist/styles/rsuite-default.css';\r\n// import ReactPlayer from 'react-player'\r\n// import Cards from './Cards.js'\r\n\r\n// class GameDetails extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             show: false,\r\n//         };\r\n//         this.close = this.close.bind(this);\r\n//         this.toggleDrawer = this.toggleDrawer.bind(this);\r\n//     }\r\n\r\n//     close() {\r\n//         this.setState({\r\n//             show: false\r\n//         });\r\n//     }\r\n//     toggleDrawer() {\r\n//         this.setState({ show: true });\r\n//     }\r\n//     render() {\r\n//         // const { Circle } = Progress;\r\n//         // const style = {\r\n//         //     width: 120,\r\n//         //     display: 'inline-block',\r\n//         //     marginRight: 10\r\n//         // };\r\n//         const textStyle = {\r\n//             verticalAlign: 'top',\r\n//             lineHeight: '42px',\r\n//             display: 'inline-block'\r\n//         };\r\n\r\n//         // const temp = this.props.game.short_screenshots.array.forEach(element, i => {\r\n//         //     console.log(element, i)\r\n//         // })\r\n//         return (\r\n//             <div>\r\n//                 <ButtonToolbar>\r\n//                     <Cards\r\n//                         game={this.props.game}\r\n//                         key={this.props.game.id}\r\n//                         onFaveToggle={() => this.props.onFaveToggle(this.props.game)}\r\n//                         games={this.props.games}\r\n//                         toggleDrawer={() => this.toggleDrawer}\r\n//                         isFave={this.props.games.includes(this.props.game)}\r\n//                     ></Cards>\r\n//                     {/* <Button onClick={this.toggleDrawer}>Details</Button> */}\r\n//                 </ButtonToolbar>\r\n//                 <Drawer\r\n//                     show={this.state.show}\r\n//                     onHide={this.close}\r\n//                 >\r\n//                     <Drawer.Header>\r\n//                         <div className='imgAndName'>\r\n//                             <img className='imgCardTop' src={this.props.game.background_image} />\r\n\r\n//                         </div>\r\n\r\n//                         <div className='detailsbtn'>\r\n//                             <p>{this.props.game.name}</p>\r\n//                             <div>\r\n//                                 <Rate defaultValue={this.props.game.rating} allowHalf readOnly size=\"md\" />\r\n//                                 <span style={textStyle}>{this.props.game.rating} / 5 </span>\r\n//                                 <span className='ratings_count' style={textStyle}>({this.props.game.ratings_count})</span>\r\n//                             </div>\r\n//                         </div>\r\n//                     </Drawer.Header>\r\n//                     <Drawer.Body>\r\n//                         {/* <Card.Img className='imgCardIn' variant=\"top\" src={this.props.game.background_image} /> */}\r\n//                         <Carousel autoplay className=\"custom-slider\">\r\n//                             {/* {console.log(this.props.game.short_screenshots)} */}\r\n//                             <img\r\n//                                 src={this.props.game.short_screenshots[0].image}\r\n//                                 height=\"250\"\r\n//                             />\r\n//                             <img\r\n//                                 src={this.props.game.short_screenshots[1].image}\r\n//                                 height=\"250\"\r\n//                             />\r\n//                             <img\r\n//                                 src={this.props.game.short_screenshots[2].image}\r\n//                                 height=\"250\"\r\n//                             />\r\n//                             <img\r\n//                                 src={this.props.game.short_screenshots[3].image}\r\n//                                 height=\"250\"\r\n//                             />\r\n//                             <img\r\n//                                 src={this.props.game.short_screenshots[4].image}\r\n//                                 height=\"250\"\r\n//                             />\r\n//                             <img\r\n//                                 src={this.props.game.short_screenshots[5].image}\r\n//                                 height=\"250\"\r\n//                             />\r\n//                             <img\r\n//                                 src={this.props.game.short_screenshots[6].image}\r\n//                                 height=\"250\"\r\n//                             />\r\n\r\n//                         </Carousel>\r\n//                         {/* <Card.Text className='Rating'>Rating:\r\n//                         </Card.Text> */}\r\n//                         {/*<div className='detailsbtn'>\r\n//                             <div style={style}>\r\n//                                 <Circle className='RatingPer' percent={parseInt((this.props.game.rating / 5) * 100)} strokeColor={parseInt((this.props.game.rating / 5) * 100) >= 90 ? \"green\" : \"yellow\"} />\r\n//                             </div> \r\n//                             <div>\r\n//                                 <Rate defaultValue={this.props.game.rating} allowHalf readOnly size=\"md\" />\r\n//                                 <span style={textStyle}>{this.props.game.rating} / 5 </span>\r\n//                                 <span className='ratings_count' style={textStyle}>({this.props.game.ratings_count})</span>\r\n//                             </div>\r\n//                         </div>*/}\r\n//                         <div>\r\n//                             <ReactPlayer volume={0.1} width={535} controls url={this.props.game.clip.clips['full']} />\r\n//                         </div>\r\n//                     </Drawer.Body>\r\n//                     <Drawer.Footer>\r\n//                         <Button onClick={this.close} appearance=\"primary\">Confirm</Button>\r\n//                         <Button onClick={this.close} appearance=\"subtle\">Cancel</Button>\r\n//                     </Drawer.Footer>\r\n//                 </Drawer>\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n// }\r\n\r\n// export default GameDetails;\r\n// // ReactDOM.render(<Demo />);","import React from 'react';\r\nimport { Row, Button } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport GameDetails from './GameDetails'\r\n\r\n\r\n\r\n\r\nconst CardList = (props) => {\r\n\r\n    const allCards = props.games.map((game) => {\r\n        return (\r\n            <GameDetails\r\n                filter={props.filter}\r\n                game={game}\r\n                key={game.id}\r\n                onFaveToggle={() => props.onFaveToggle(game)}\r\n                faves={props.faves}\r\n                games={props.games}\r\n            // isFave={props.games.includes(game)}\r\n            ></GameDetails>)\r\n    })\r\n\r\n\r\n\r\n    const search = props.search.map((game) => {\r\n        return (\r\n            <GameDetails\r\n                filter={props.filter}\r\n                game={game}\r\n                key={game.id}\r\n                onFaveToggle={() => props.onFaveToggle(game)}\r\n                faves={props.faves}\r\n                games={props.games}\r\n            // isFave={props.games.includes(game)}\r\n            ></GameDetails>\r\n        )\r\n    })\r\n\r\n    const fav = props.faves.map((game) => {\r\n        return (\r\n            <GameDetails\r\n                filter={props.filter}\r\n                game={game}\r\n                key={game.id}\r\n                onFaveToggle={() => props.onFaveToggle(game)}\r\n                faves={props.faves}\r\n                games={props.games}\r\n            // isFave={props.games.includes(game)}\r\n            ></GameDetails>\r\n        )\r\n    })\r\n    return (\r\n        <div>\r\n            <Row>\r\n                {props.filter === 'all' && search.length === 0 ? allCards\r\n                    : search.length > 0 ? search\r\n                        : props.filter === 'fav' ? fav\r\n                            : null}\r\n                {/* {props.filter === 'all' ? allCards : fav} */}\r\n                {/* {props.filter === 'all' && search.length === 0 ? allCards : new Set(search)} */}\r\n                {/* {props.filter === 'hh'? allCards : search}\r\n                {props.filter !== 'all' ? fav : search} */}\r\n                {/*{props.filter === 'all' ? search.length === 0? allCards : props.filter === 'fav'? fav : search : null}*/}\r\n            </Row>\r\n            {props.filter === 'fav' && props.faves.length > 0 ? <Button onClick={props.setFave()} variant=\"outline-danger\">Remove all</Button> : \"\"}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// //import React from 'react';\r\n// import React, { Component } from 'react';\r\n// import {Row,Button} from 'react-bootstrap'\r\n// import 'bootstrap/dist/css/bootstrap.css'\r\n// import GameDetails from './GameDetails'\r\n\r\n\r\n\r\n// class CardList extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             allCards: [],\r\n//             filter: 'all',\r\n//         };\r\n//         console.log('77777')\r\n//     }\r\n\r\n//     // componentDidMount = ()=>{\r\n//     //     console.log('rrrrr',this.props.games)\r\n//     //     const allCards = this.props.games.map((game) => {\r\n//     //         {console.log('0000')}\r\n//     //             <Cards\r\n//     //             game={game}\r\n//     //             key={game.id}\r\n//     //             ></Cards>\r\n//     //     })\r\n//     //     this.setState({\r\n//     //         allCards:allCards\r\n//     //     })\r\n//     // }\r\n\r\n//     render() {\r\n//         { console.log('555', this.props.games) }\r\n//         const allCards = this.props.games.map((game) => {\r\n//             return ( \r\n//                 <GameDetails\r\n//                     game={game}\r\n//                     key={game.id}\r\n//                     onFaveToggle={() => this.props.onFaveToggle(game)}\r\n//                     games={this.props.games}\r\n//                     isFave={this.props.games.includes(game)}\r\n//                 ></GameDetails>)\r\n//         })\r\n\r\n//         const fav = this.props.faves.map((game) => {\r\n//             return (\r\n//                 <GameDetails\r\n//                     game={game}\r\n//                     key={game.id}\r\n//                     onFaveToggle={() => this.props.onFaveToggle(game)}\r\n//                     games={this.props.games}\r\n//                     isFave={this.props.games.includes(game)}\r\n//                 ></GameDetails>\r\n//             )\r\n//         })\r\n\r\n//         // { console.log('555', this.props.games) }\r\n//         // { console.log('6666', allCards) }\r\n//         return (\r\n//             <div>\r\n\r\n//                 <Row>\r\n//                     {this.props.filter === 'all' ? allCards : fav }\r\n//                     {/* {allCards} */}\r\n//                 </Row>\r\n//                 {this.props.filter === 'fav' && this.props.faves.length > 0 ? <Button onClick={this.props.setFave()} variant=\"outline-danger\">Remove all</Button> :\"\" }\r\n\r\n//             </div>\r\n\r\n\r\n\r\n\r\n//             // <Card style={{ width: '18rem' }}>\r\n//             //     <Card.Body>\r\n//             //         <Card.Title>{this.state.name}</Card.Title>\r\n//             //         <Card.Img variant=\"top\" src={this.state.img} />\r\n//             //         <Button variant=\"primary\">Go somewhere</Button>\r\n//             //     </Card.Body>\r\n//             // </Card>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default CardList;","import React from 'react';\r\nimport { Nav } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { InputGroup, Input, Icon } from 'rsuite';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\n\r\nconst Navbar = (props) => {\r\n    const styles = {\r\n        width: 300,\r\n        marginTop: 10,\r\n        marginBottom: 5\r\n    };\r\n    return (\r\n        <Nav id='fixed-top' fill /*defaultActiveKey=\"/home\"*/>\r\n            <Nav.Item id='navtabs'>\r\n                <Nav.Link onClick={() => props.handleFilterClick('all')} >All games</Nav.Link>\r\n            </Nav.Item>\r\n            {/* <Nav.Item id='navtabs'>\r\n                <Nav.Link onClick={() => props.handleFilterClick('search')} >Search for game</Nav.Link>\r\n            </Nav.Item> */}\r\n            <InputGroup inside style={styles}>\r\n                <Input placeholder=\"Game name\" onChange={(event) => props.handleSearchClick(event)} />\r\n                <InputGroup.Button>\r\n                    <Icon icon=\"search\" />\r\n                </InputGroup.Button>\r\n            </InputGroup>\r\n            <Nav.Item id='navtabs'>\r\n                <Nav.Link onClick={() => props.handleFilterClick('fav')}>Fav games</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n}\r\nexport default Navbar;\r\n\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import { Nav } from 'react-bootstrap'\r\n// import 'bootstrap/dist/css/bootstrap.css'\r\n\r\n// class Navbar extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {};\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <Nav className='fixed-top' fill variant=\"tabs\" /*defaultActiveKey=\"/home\"*/>\r\n//                 <Nav.Item>\r\n//                     {/* <Nav.Link href=\"/home\">All games</Nav.Link> */}\r\n//                     <Nav.Link onClick={() => this.props.handleFilterClick('all')} >All games</Nav.Link>\r\n//                 </Nav.Item>\r\n//                 <Nav.Item>\r\n//                     {/* <Nav.Link href=\"/home\">All games</Nav.Link> */}\r\n//                     <Nav.Link onClick={() => this.props.handleFilterClick('fav')}>Fav games</Nav.Link>\r\n//                 </Nav.Item>\r\n//             </Nav>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Navbar;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Container, Button } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport CardList from './component/CardList';\nimport axios from \"axios\"\nimport Navbar from \"./component/Navbar.js\"\nimport { Icon } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\n\n\nconst App = () => {\n\n    const [gameData, setGameData] = useState(() => [])\n    const [faves, setFaves] = useState(() => [])\n    const [filter, setFilter] = useState(() => 'all')\n    const [page, setPage] = useState(() => 1)\n    const [pageS, setPageS] = useState(() => 1)\n    const [load, setLoad] = useState(() => 'More Games')\n    const [search, setSearch] = useState(() => [])\n    const [name, setName] = useState(() => \"\")\n\n    const handleFilterClick = (filter) => {\n        setFilter(prevFilter => prevFilter = filter)\n    }\n\n    const handleSearchClick = (name) => {\n        // (search > 0 ? setSearch(prevSearch => prevSearch = []) : console.log('skip', search))\n        const url = `https://api.rawg.io/api/games?search=${name}`\n        axios({\n            method: 'GET',\n            url: url\n        }).then(response => {\n            setSearch(prevSearch => prevSearch = (response.data.results))\n            setName(prevName => prevName = name)\n        })\n        handleFilterClick('search')\n    }\n    const handleSearchClickMore = () => {\n        // (search > 0 ? setSearch(prevSearch => prevSearch = []) : console.log('skip', search))\n        const url = `https://api.rawg.io/api/games?page=${pageS}&search=${name}`\n        axios({\n            method: 'GET',\n            url: url\n        }).then(response => {\n            setSearch(prevSearch => prevSearch.concat(response.data.results))\n            setLoad(prevLoad => prevLoad = 'More Games')\n        })\n        handleFilterClick('search')\n        \n    }\n    const call = () => {\n        const url = `https://api.rawg.io/api/games?page=1`\n\n        axios({\n            method: 'GET',\n            url: url\n        }).then(response => {\n            setGameData(prevGameData => prevGameData = response.data.results)\n        })\n    }\n\n    const call2 = (num) => {\n        const url = `https://api.rawg.io/api/games?page=${num}`\n\n        axios({\n            method: 'GET',\n            url: url\n        }).then(response => {\n            setGameData(prevGameData => prevGameData.concat(response.data.results))\n            setLoad(prevLoad => prevLoad = 'More Games')\n        })\n\n\n    }\n\n    const handleFaveToggle = (film) => {\n        const fave = faves.slice(0)\n        const filmIndex = fave.indexOf(film)\n        filmIndex === -1 ? fave.push(film) : fave.splice(filmIndex, 1)\n        setFaves(prevFave => prevFave = fave)\n    }\n\n    const setFave = () => {\n        setFaves(prevFave => prevFave = [])\n    }\n\n    useEffect(() => {\n        call()\n        // call3()\n    }, [])\n    useEffect(() => {\n        // (page < 2 && filter === 'search') ? console.log('') :\n        //     call2(page)\n        if(pageS > 1 && filter === 'search'){\n            handleSearchClickMore()\n        }else if(page > 1 && filter === 'all'){\n            call2(page)\n        }\n    }, [page,pageS])\n\n    const loading = (e) => {\n        e.preventDefault();\n        setLoad(prevLoad => prevLoad = 'Loading...' )\n        if(filter==='all'){\n            setPage(prevPage => prevPage + 1)\n        }else if(filter==='search'){\n            setPageS(prevPage => prevPage + 1)\n        }\n        \n    }\n    const cardlist1 = ((filter === 'all' || filter === 'fav') && search.length > 0 ? setSearch(prevSearch => prevSearch = []) : null)\n    const cardlist = (gameData ? <div>\n        <CardList className='card-container' setFave={() => setFave} filter={filter} search={search} games={gameData} faves={faves} onFaveToggle={handleFaveToggle}></CardList>\n    </div> : null)\n\n    return (\n        <div className=\"App\">\n            <Navbar search={search} handleSearchClick={handleSearchClick} handleFilterClick={handleFilterClick}></Navbar>\n            <header className=\"App-header\">\n                {filter === 'all' || filter === 'search' ? <h1 className='h1Header'>My Games</h1> : <h1 className='h1Header'>Favourite Games</h1>}\n                {/* <h1 className='h1Header'>{title}</h1> */}\n                <Container>\n\n                    {cardlist}\n\n                </Container>\n                {/* <button  onClick={test}>More Games</button> */}\n                {filter === 'all' || filter === 'search' ? <Button id='moreBtn' variant=\"light\" onClick={loading}>{load}</Button> : null}\n\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { Component } from 'react';\n// import './App.css';\n// import {Container} from 'react-bootstrap'\n// import 'bootstrap/dist/css/bootstrap.css'\n// import CardList from './component/CardList';\n// import axios from \"axios\"\n// import Navbar from \"./component/Navbar.js\"\n// // import GameDetails from './component/GameDetails';\n// // import Demo from './component/Demo.js';\n\n\n// class App extends Component {\n//     constructor(props) {\n\n//         super(props);\n\n//         this.state = {\n//             gameData: null,\n//             faves: [],\n//             filter: 'all',\n//         };\n\n//         //this.handleCards=this.handleCards.bind(this)\n//     }\n\n//     handleFilterClick = (filter) => {\n//         this.setState({ filter })\n//     }\n\n//     call = () => {\n//         const url = `https://api.rawg.io/api/games`\n\n//         axios({\n//             method: 'GET',\n//             url: url\n//         }).then(response => {\n//             console.log('uyuyuy', response.data.results)\n//             this.setState({ gameData: response.data.results })\n//         })\n//     }\n\n\n//     handleFaveToggle = (film) => {\n//         const faves = this.state.faves.slice(0)\n//         const filmIndex = this.state.faves.indexOf(film)\n//         filmIndex === -1 ? faves.push(film) : faves.splice(filmIndex, 1)\n//         this.setState({ faves })\n//     }\n\n//     setFave = () => {\n//         this.setState({ faves: [] })\n//     }\n\n//     componentDidMount() {\n//         this.call()\n//     }\n\n\n\n//     render() {\n//         console.log('hhhhh', this.state.gameData)\n//         const cardlist = (this.state.gameData ? <div>\n//             <CardList className='card-container' setFave={()=>this.setFave} filter={this.state.filter} games={this.state.gameData} faves={this.state.faves} onFaveToggle={this.handleFaveToggle}></CardList>\n//         </div> : null)\n\n//         return (\n//             <div className=\"App\">\n//                 <Navbar handleFilterClick={this.handleFilterClick}></Navbar>\n//                 <header className=\"App-header\">\n//                     <Container>\n\n//                         {cardlist}\n//                     </Container>\n//                 </header>\n//             </div>\n//         );\n//     }\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}